syntax="proto2";
// Copyright 2019 The MathWorks, Inc.

package robotics.gazebotransport;
message Time {
  // use two uint64 to log time stamp since beginning of simulation
  required uint64 seconds = 1;
  required uint64 nano_seconds = 2;
}

message PacketHeader {
  enum MsgID {
    STATUS = 0;
    STEP_SIMULATION = 1;
    RESET_SIMULATION = 2;
    IMAGE = 3;
    REQUEST_IMAGE = 4;
    REQUEST_COSIM = 5;
    STOP_COSIM = 6;
    GET_GROUND_TRUTH_WORLD_POSE = 7;
    POSE = 8;
    STOP_SIMULATION = 9;
    LASER_DATA = 10;
    REQUEST_LASER = 11;
    IMU_DATA = 12;
    REQUEST_IMU = 13;
    SUBSCRIBE_IMAGE = 14;
    SUBSCRIBE_LASER = 15;
    SUBSCRIBE_IMU = 16;
    APPLY_JOINT_TORQUE = 17;
    GET_POSE = 18;
    GET_TOPIC_LIST = 19;
    TOPIC_LIST = 20;
    GET_MODEL_INFO = 21;
    MODEL_INFO = 22;
    APPLY_LINK_WRENCH = 23;
    MAX_STEP_SIZE = 24;
  }
  required MsgID id = 1;
  required Time time_stamp = 2;
}

message Packet {
  enum CoSimError {
    NONE = 0;
    STEP_FAILED = 1;
    MSG_INVALID = 2;
    SOCKET_FAILED = 3;
    RESET_FAILED = 4;
    COSIM_FAILED = 5;
    STOP_COSIM_FAILED = 6;
    GET_GROUND_TRUTH_WORLD_POSE_FAILED = 7;
    RESET_TIME_SCENE_FAILED = 8;
    RESET_TIME_FAILED = 9;
    STOP_FAILED = 10;
    FORCE_TYPE_INVALID = 11;
    MODEL_NAME_INVALID = 12;
    LINK_NAME_INVALID = 13;
    JOINT_NAME_INVALID = 14;
    TOPIC_NAME_INVALID = 15;
    TORQUE_TYPE_INVALID = 16;
    MAX_STEP_SIZE_ERROR = 17;
  }
  
  required PacketHeader header = 1;
  
  oneof payload {
    CoSimError status = 2;
    StepSimulation step_simulation = 3;
    ResetSimulation reset_simulation = 4;
    Image image = 5;
    RequestImage request_image = 6;
    RequestCoSim request_cosim = 7;
    StopCoSim stop_cosim = 8;
    GetGroundTruthWorldPose get_ground_truth_world_pose = 9;
    Pose pose = 10;
    StopSimulation stop_simulation = 11;
    LaserData laser_data = 12;
    RequestLaser request_laser = 13;
    ImuData imu_data = 14;
    RequestImu request_imu = 15;
    SubscribeImage subscribe_image = 16;
    SubscribeLaser subscribe_laser = 17;
    SubscribeImu subscribe_imu = 18;
    ApplyJointTorque apply_joint_torque = 19;
    GetPose get_pose = 20;
    GetTopicList get_topic_list = 21;
    TopicList topic_list = 22;
    GetModelInfo get_model_info = 23;
    ModelInfo model_info = 24;
    ApplyLinkWrench apply_link_wrench =25;
    MaxStepSize max_step_size = 26;
  }
}

message StepSimulation {
  required uint32 num_steps = 1;
}

message ResetSimulation {
  enum ResetBehavior {
    RESET_TIME = 0;
    RESET_TIME_AND_SCENE = 1;
  }
  required ResetBehavior behavior = 1;
}

message Image {
  required uint32 width = 1;
  required uint32 height = 2;
  required bytes data = 3;
  required string data_type = 4;
}

message RequestImage {
  required string topic_name = 1;
}

message RequestCoSim {
  required string client_id = 1;
  required double duration = 2;
}

message StopCoSim {
  required string client_id = 1;
}

message GetGroundTruthWorldPose {
  required string model_name = 1;
  required string link_name = 2;
}

message Point 
{ 
  required double x = 1; 
  required double y = 2; 
  required double z = 3; 
}

message Quaternion 
{ 
  required double x = 1; 
  required double y = 2; 
  required double z = 3; 
  required double w = 4; 
} 

message Pose 
{ 
  required Point position = 1; 
  required Quaternion orientation = 2; 
}

message StopSimulation {
  required bool stop_scene = 1;
}

message LaserData 
{ 
  required double angle_min = 1; 
  required double angle_max = 2; 
  required double angle_step = 3; 
  required double range_min = 4; 
  required double range_max = 5; 
  required double count = 6; 
  required double vertical_angle_min = 7; 
  required double vertical_angle_max = 8; 
  required double vertical_angle_step = 9; 
  repeated double range = 10; 
  repeated double intensities = 11; 
}

message RequestLaser {
  required string topic_name = 1;
}

message ImuData 
{ 
  required Point linear_acceleration = 1; 
  required Point angular_velocity = 2; 
  required Quaternion orientation = 3; 
} 


message RequestImu {
  required string topic_name = 1;
}

message SubscribeImage {
  required string topic_name = 1;
}

message SubscribeLaser {
  required string topic_name = 1;
}

message SubscribeImu {
  required string topic_name = 1;
}

message ApplyLinkWrench{
  required string model_name = 1;
  required string link_name = 2;
  required string force_type = 3;
  required double fx = 4;
  required double fy = 5;
  required double fz = 6;
  required string torque_type = 7;
  required double tx = 8;
  required double ty = 9;
  required double tz = 10;
  required Time duration = 11;
}

message ApplyJointTorque{
  required string model_name = 1;
  required string joint_name = 2;
  required uint32 index = 3;  // should be unsigned int
  required double effort = 4;
  required Time duration = 5;
}

message GetPose{
  required string model_name = 1;
}

message GetTopicList{
  required string topic_name = 1;
}

message TopicList{
  message TopicInfo {
    required string name = 1;
    required string type = 2;
  }
  repeated TopicInfo data = 1;
}

message GetModelInfo{
  required string topic_name = 1;
}

message ModelInfo{
  message LINKS
  {
    repeated string link_name = 1;
  }
  message JOINTS
  {
    repeated string joint_name = 1;
  }
  message Model 
  {
    required string model_name = 1;
    optional LINKS links = 2;
    optional JOINTS joints = 3;
  }
  repeated Model model_data = 1;
}

message MaxStepSize{
    enum TYPE {
    SET_STEP_SIZE = 0;
    GET_STEP_SIZE = 1;
  }
  required TYPE type = 1;
  required double size = 2;
}

