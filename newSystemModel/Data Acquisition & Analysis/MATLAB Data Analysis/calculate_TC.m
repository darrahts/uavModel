function TC = calculate_TC(Seconds, Throttle, RPM)
% This function calculates the time constant from a step change in throttle
% input. This function should only be run on data taken from the STEP TEST
% function of the motor testing program; do not use it on data generated by
% other meanse  as the results will be COMPLETELY incorrect!
%
% Output is given in the form of returned TC value and plot.
%
% See also calculate_CR_B, calculate_CT.

ThrottleU = unique(Throttle); % get unique throttle values (There should only be two!)
lowThrottle = ThrottleU(1); % get Initial Throttle Setting
highThrottle = ThrottleU(2); % get Step High Throttle Setting
highStepSeconds = Seconds(Throttle==highThrottle); % Time at Step Throttle
highRPMs = RPM(Throttle==highThrottle); % RPMs at high Throttle
highThrottles = Throttle(Throttle==highThrottle); % Throttles at high throttle
stepTime = highStepSeconds(1); % Find time at which step high command is issued
lowStepSeconds1 = Seconds(Seconds<stepTime); % time before step occurs
lowRPMs1 = RPM(Seconds<stepTime); % RPM values recorded before step time
lowStepSeconds2 = Seconds(Seconds>max(highStepSeconds)); % RPM values recorded 
RPMhigh = mean(highRPMs(highStepSeconds>=stepTime+1 & highStepSeconds<=stepTime+3));
RPMlow = mean(lowRPMs1(lowStepSeconds1>=stepTime-2));
RPMatTC = (RPMhigh-RPMlow)*(1-exp(-1))+RPMlow;
% Find closest points to target and interpolate between these
ptsB = find(highRPMs <= RPMatTC,2,'last'); % 2 pts just below or on target (not necessarily consecutive)
ptsA = find(highRPMs > RPMatTC,2,'first'); % 2 pts just above target (not necessarily consecutive)
secB =  highStepSeconds(ptsB); % Time value corresponding to ptsB
secA = highStepSeconds(ptsA);  % Time value corresponding to ptsA
RPMPtB = mean(highRPMs(ptsB)); % average RPM value corresponding to ptsB
RPMPtA = mean(highRPMs(ptsA)); % average RPM value corresponding to ptsA
SecPtB = mean(secB);           % average RPM value corresponding to ptsA
SecPtA = mean(secA);
SecAtTC = interp1([RPMPtB RPMPtA],[SecPtB SecPtA],RPMatTC);
SecPts = [secB; secA];
RPMPts = [highRPMs(ptsB); highRPMs(ptsA)];

TC = SecAtTC-stepTime;
a = 1/TC;
% Time Constant Plot
figure
plot(highStepSeconds,highRPMs,'k');
xlabel('Time (s)','FontSize',12)
ylabel('RPM (rev/min)','FontSize',12)
title(['Step Response from ' num2str(lowThrottle) '% to ' ...
    num2str(highThrottle) '% Throttle'],'FontSize',14)
hold on
x1 = min(highStepSeconds);
x2 = min(highStepSeconds(highStepSeconds>=stepTime+0.6));
y1 = RPMlow;
y2 = max(highRPMs);
plot([x1 x2],[RPMhigh RPMhigh],'r')
plot([x1 x2],[RPMlow RPMlow],'c')
plot([x1 x2],[RPMatTC RPMatTC],'y')
plot([SecAtTC SecAtTC],[min(highRPMs),y2],'b')
xlim([x1 x2])
ylim([min(highRPMs) y2])
legend('RPM', ['High RPM = ' num2str(RPMhigh)], ['Low RPM = ' num2str(RPMlow)],...
    ['RPM at TC = ' num2str(RPMatTC)],['TC = ' num2str(TC) ' s'],'Location','SouthEast')
hold off
end